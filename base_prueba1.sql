CREATE DATABASE ALIFE_PRUEBA1;
\l
\c alife_prueba1;

--TABLA LUGARES
CREATE TABLE lugares(
    id_lugar SERIAL PRIMARY KEY NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    coord_x FLOAT,
    coord_y FLOAT,
    alto FLOAT,
    ancho FLOAT,
    color_p VARCHAR(7) NOT NULL,
    color_s VARCHAR(7) NOT NULL,
    imagen VARCHAR(200),
    globo VARCHAR(200)
);

--TABLA ESCUELAS
CREATE TABLE escuelas(
    id_escuela SERIAL PRIMARY KEY NOT NULL,
    nombre VARCHAR(100) NOT NULL CONSTRAINT U_NOMBRE_ESCUELAS UNIQUE,
    color VARCHAR(7) NOT NULL
);

--TABLA AREAS
CREATE TABLE areas(
    id_area SERIAL CONSTRAINT PK_ID_AREAS PRIMARY KEY NOT NULL,
    nombre VARCHAR(100) CONSTRAINT U_NOMBRE_AREAS UNIQUE NOT NULL,
    foto VARCHAR(200)
);

--TABLA CATEGORÍAS
CREATE TABLE categorias(
    id_categoria SERIAL CONSTRAINT PK_ID_CATEGORIAS PRIMARY KEY NOT NULL,
    nombre VARCHAR(100) CONSTRAINT U_NOMBRE_CATEGORIAS UNIQUE NOT NULL,
    descripcion VARCHAR(200)
);

--TABLA PROFESORES
CREATE TABLE profesores(
    id_profesor SERIAL CONSTRAINT PK_ID_PROFESORES PRIMARY KEY NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    apellido_p VARCHAR(40) NOT NULL,
    apellido_m VARCHAR(40) NOT NULL,
    correo VARCHAR(100) CONSTRAINT U_CORREO_PROFESORES UNIQUE NOT NULL,
    foto VARCHAR(200)
);

--TABLA RESTAURANTES
CREATE TABLE restaurantes(
    id_restaurante SERIAL CONSTRAINT PK_ID_RESTAURANTES PRIMARY KEY NOT NULL,
    nombre VARCHAR(100) CONSTRAINT U_NOMBRE_RESTAURANTES UNIQUE NOT NULL,
    num_cuenta INT CONSTRAINT U_NUM_CUENTA_RESTAURANTES UNIQUE,
    telefono INT CONSTRAINT U_TELEFONO_RESTAURANTES UNIQUE, 
    id_lugar INT CONSTRAINT FK_ID_LUGAR_RESTAURANTES REFERENCES lugares (id_lugar) 
);

--TABLA DEPARTAMENTOS
CREATE TABLE departamentos(
    id_depto SERIAL CONSTRAINT PK_ID_DEPARTAMENTOS PRIMARY KEY NOT NULL,
    nombre VARCHAR(100) CONSTRAINT U_NOMBRE_DEPARTAMENTOS UNIQUE NOT NULL,
    descripcion VARCHAR(200),
    tramites VARCHAR(400),
    id_lugar INT CONSTRAINT FK_ID_LUGAR_DEPARTAMENTOS REFERENCES lugares (id_lugar)
);

--TABLA ALUMNOS
CREATE TABLE alumnos(
    id_alumno INT CONSTRAINT PK_ID_ALUMNOS PRIMARY KEY NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    apellido_p VARCHAR(40) NOT NULL,
    apellido_m VARCHAR(40) NOT NULL,
    correo VARCHAR(100) CONSTRAINT U_CORREO_ALUMNOS UNIQUE NOT NULL,
    contraseña VARCHAR(100) NOT NULL,
    salt VARCHAR(10) CONSTRAINT U_SALT_ALUMNOS UNIQUE NOT NULL,
    foto VARCHAR(200),
    id_escuela INT CONSTRAINT FK_ID_ESCUELA_ALUMNOS REFERENCES escuelas (id_escuela)
);

--TABLA EVENTOS
CREATE TABLE eventos(
    id_evento SERIAL CONSTRAINT PK_ID_EVENTOS PRIMARY KEY NOT NULL,
    descripcion VARCHAR(200) NOT NULL,
    fecha DATE,
    puntos_social INT,
    puntos_liderazgo INT,
    puntos_profesional INT,
    puntos_espiritual INT,
    direccion VARCHAR(200),
    id_lugar INT CONSTRAINT FK_ID_LUGAR_EVENTOS REFERENCES lugares (id_lugar),
    id_area INT CONSTRAINT FK_ID_AREA_EVENTOS REFERENCES areas (id_area)
);

--TABLA CLASES
CREATE TABLE clases(
    nrc INT CONSTRAINT PK_NRC_CLASES PRIMARY KEY NOT NULL,
    nombre VARCHAR(100),
    id_profesor INT CONSTRAINT FK_ID_PROFESOR_CLASES REFERENCES profesores (id_profesor)
);

--TABLA TRABAJADORES
CREATE TABLE trabajadores(
    id_trabajador SERIAL CONSTRAINT PK_ID_TRABAJADORES PRIMARY KEY NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    apellido_p VARCHAR(40) NOT NULL,
    apellido_m VARCHAR(40) NOT NULL,
    correo VARCHAR(100) CONSTRAINT U_CORREO_TRABAJADORES UNIQUE NOT NULL,
    telefono INT CONSTRAINT U_TELEFONO_TRABAJADORES UNIQUE,
    puesto VARCHAR(100) NOT NULL,
    id_depto INT CONSTRAINT FK_ID_DEPTO_TRABAJADORES REFERENCES departamentos (id_depto)
);

--TABLA ORDENES
CREATE TABLE ordenes(
    id_orden SERIAL CONSTRAINT PK_ID_ORDENES PRIMARY KEY NOT NULL,
    fecha_entrega date NOT NULL,
    hora_entrega time NOT NULL,
    id_alumno INT CONSTRAINT FK_ID_ALUMNO_ORDENES REFERENCES alumnos (id_alumno)
);

--TABLA SECCIONES
CREATE TABLE secciones(
    id_seccion SERIAL CONSTRAINT PK_ID_SECCIONES PRIMARY KEY NOT NULL,
    nombre VARCHAR(40) NOT NULL,
    imagen VARCHAR(200) NOT NULL,
    id_restaurante INT CONSTRAINT FK_ID_RESTAURANTE_SECCIONES REFERENCES restaurantes (id_restaurante)
);

--TABLA SUBSECCIONES
CREATE TABLE subsecciones(
    id_subseccion SERIAL CONSTRAINT PK_ID_SUBSECCIONES PRIMARY KEY NOT NULL,
    nombre VARCHAR(40) NOT NULL,
    imagen VARCHAR(200) NOT NULL,
    id_seccion INT CONSTRAINT FK_ID_SECCION_SUBSECCIONES REFERENCES secciones (id_seccion)
);

--TABLA HORARIOS
CREATE TABLE horarios(
    id_horario SERIAL CONSTRAINT PK_ID_HORARIOS PRIMARY KEY NOT NULL,
    periodo VARCHAR(20) NOT NULL,
    id_alumno INT CONSTRAINT FK_ID_ALUMNO_HORARIOS REFERENCES alumnos (id_alumno)
);

--TABLA CLASES_LUGARES
CREATE TABLE clases_lugares(
    nrc INT CONSTRAINT FK_NRC_CLASES_LUGARES REFERENCES clases (nrc) NOT NULL,
    dia VARCHAR(10) CONSTRAINT CHK_DIA_CLASES_LUGARES CHECK(dia IN ('LUNES','MARTES','MIERCOLES','JUEVES','VIERNES','SABADO')) NOT NULL,
    hora_ini TIME NOT NULL,
    hora_fin TIME NOT NULL,
    aula VARCHAR(20),
    id_lugar INT CONSTRAINT FK_ID_LUGAR_CLASES_LUGARES REFERENCES lugares (id_lugar) NOT NULL
);

--TABLA EVENTOS_CATEGORIAS
CREATE TABLE eventos_categorias(
    id_evento INT CONSTRAINT FK_ID_EVENTO_EVENTOS_CATEGORIAS REFERENCES eventos (id_evento) NOT NULL,
    id_categoria INT CONSTRAINT FK_ID_CATEGORIA_EVENTOS_CATEGORIAS REFERENCES categorias (id_categoria) NOT NULL
);

--TABLA PLATILLOS
CREATE TABLE platillos(
    id_platillo SERIAL CONSTRAINT PK_ID_PLATILLOS PRIMARY KEY NOT NULL,
    precio FLOAT NOT NULL,
    descripcion VARCHAR(200),
    id_subseccion INT CONSTRAINT FK_ID_SUBSECCION_PLATILLOS REFERENCES subsecciones (id_subseccion)
);

--TABLA ORDENES_PLATILLOS
CREATE TABLE ordenes_platillos(
    id_orden INT CONSTRAINT FK_ID_ORDEN_ORDENES_PLATILLOS REFERENCES ordenes (id_orden) NOT NULL,
    id_platillo INT CONSTRAINT FK_ID_PLATILLO_ORDENES_PLATILLOS REFERENCES platillos (id_platillo) NOT NULL
);

--TABLA CLASES_HORARIOS
CREATE TABLE clases_horarios(
    nrc INT CONSTRAINT FK_ID_CLASE_CLASES_HORARIOS REFERENCES clases (nrc) NOT NULL,
    id_horario INT CONSTRAINT FK_ID_HORARIO_CLASES_HORARIOS REFERENCES horarios (id_horario) NOT NULL
);